@model PaginationViewModel<SupplierListViewModel>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Supplier";
}

<div class="text">
    <h1 class="display-4">Supplier</h1>
</div>
<vc:summary></vc:summary>
@if (User.Identity.Name == "Admin@nttdata.com")
{
<div>
    <a asp-action="CreatePhysical" asp-controller="Supplier" class="btn btn-primary">New Supplier Physical</a>
    <a asp-action="CreateJuridical"  asp-controller="Supplier" class="btn btn-primary">New Supplier Juridical</a>
</div>
}
<br/>

<form asp-action="Index" method="get">
  <div class="form-row" style="justify-content: space-between;">
      
    <div class="form-group col-md-2">
    <p>suppliers per page</p>
      <select class="form-control" asp-for="PageSize">
          <option value="10">10</option>
          <option value="50">50</option>
          <option value="@int.MaxValue">All</option>
      </select>
    </div>
    <div class="form-group col-md-3">
    <p>Search</p>
      <input type="text" asp-for="Query" placeholder="Search Fantasy Name">
      <span>
      <button type="submit" class="btn btn-secondary">Search</button>
      </span>
    </div>
  </div>
</form>

<table class="table">
  <thead>
    <tr>
      <th scope="col">Status</th>
      <th scope="col">Fantasy Name</th>
      <th scope="col">Full Name/Company Name</th>
      <th scope="col">Email</th>
      <th scope="col">Phones</th>
      <th scope="col">CPF/CNPJ</th>
    </tr>
  </thead>
  <tbody>
    @if(Model != null)
     @foreach (var item in Model.List)
    {
        <tr>
            <td>
                @if(item.Active){
                    <p>Active</p>
                }else{
                    <p>deactivated</p>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FantasyName)
            </td>
            <td>
                @if(item.FullName != null){
                    <p>@item.FullName</p>
                }else{
                    <p>@item.CompanyName</p>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email.EmailAddress)
            </td>
            <td>
                @foreach (var phones in item.Phone)
                {
                    <p>(@phones.Ddd) - @phones.Number</p>
                }
            </td>
            <td>
                @if(item.Cnpj != null){
                    <p>@item.Cnpj</p>
                }else{
                    <p>@item.Cpf</p>
                }
            </td>
            <td>
                @Html.ActionLink("Details", "Details", new { identification =item.Cpf != null ? item.Cpf : item.Cnpj},
                                                       new { @class = "btn btn-primary" })
            </td>
            @if (User.Identity.Name == "Admin@nttdata.com")
            {
            <td>
                @Html.ActionLink("Edit", "Edit", new { identification =item.Cpf != null ? item.Cpf : item.Cnpj},
                                                 new { @class = "btn btn-warning" })
            </td>
             <td>
                @Html.ActionLink("Delete", "Delete", new { identification =item.Cpf != null ? item.Cpf : item.Cnpj },
                                                     new { @class = "btn btn-danger" })
            </td>
            }
        </tr>
    }
  </tbody>
</table>
  <div style="display: flex; justify-content: center; align-items: center;">
   <vc:pagination paged-view-model="@Model"></vc:pagination>
</div>